package demo.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import javax.annotation.security.RolesAllowed;

import demo.demo.model.*;
import demo.demo.service.StudentService;

@Controller // This means that this class is a Controller
@RequestMapping(path="/students") // This means URL's start with /demo (after Application path)
public class StudentController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private StudentService studentService;

  public StudentController(StudentService studentService) {
		super();
		this.studentService = studentService;
	}
	
	// build get all student REST API
	@GetMapping
	public String getAllStudent(Model model){
    model.addAttribute("students", studentService.getAllStudent());
    return "admin/AdminPage";
	}

  // build get student by id REST API
	@GetMapping("/editform/{id}")
	public String getStudentById(@PathVariable("id") Integer id, Model model){
    model.addAttribute("student", studentService.getStudentById(id));
    return "StudentUpdate";
	}

  // build update student REST API
	@RequestMapping("/edit/{id}")
	public String updateStudent(@PathVariable("id") Integer id, @ModelAttribute("student") Student student){
		studentService.updateStudent(student, id);
		return "Submitted";
	}
	 
	// build delete student REST API
	@RequestMapping("/delete/{id}")
	public ResponseEntity<String> deleteStudent(@PathVariable("id") Integer id){
		
		// delete Student from DB
	 studentService.deleteStudent(id);
		
		return new ResponseEntity<String>("Student deleted successfully!.", HttpStatus.OK);
	}
}